<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAIlJREFUOE+lUwkO
        wCAI4+n83IkZpmhhLpqYHVAspYr8XE2k2db3OeEYyGo60MC+R+4WUO2/4mJg9bwyyA4wBush2MKk2JMs
        ESmPb8IwaBEA0G8JxI5pS4x2pvY1g6sCKX3XIhORTgEFXN9xEpVo2xjXqZwoXuZ8udAnldr95B6EIkxE
        t+ex08BAD8RLCGL6OctWAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnSiguiente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AwAAAAAAADYAAAAoAAAAEQAAABAAAAABABgAAAAAAAAAAADEDgAAxA4AAAAAAAAAAAAAYmRmQEBA
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+VFZXAHd3d8TExJ2dnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnYyMjDw8PAB3d3fm5ubAwMDCwsLn5+fX19fAwMDA
        wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCampo8PDwAd3d35ubmwMDArq6uiU1NuXJy5NHR2NjYwMDAwMDA
        wMDAwMDAwMDAwMDAwMDAmpqaPDw8AHd3d+bm5sDAwL6+vo58fIAODooUFLVra+HKytjY2MLCwsDAwMDA
        wMDAwMDAwJqamjw8PABubm7i4uLV1dXV1dXGxsaNS0uAAACAAACKFBSxY2Pdw8Pa2trFxcXAwMDAwMCa
        mpo8PDwAcGBgwJub2rW12rW12rW1nGlpgAAAgAAAgAAAgAAAiRISrVpa2r6+3Nzcx8fHmpqaPDw8AMG6
        voMKCoAAAIAAAIAAAIAAAIAAAIAAAIAAAIAAAIAAAIAAAIcODqlSUtG0tJOTkzw8PADBur6DCgqAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACABweAKSmOcXGTk5M8PDwAcGBgm3Z2gFtbgFtbhWBguISE
        gAAAgAAAgAAAgAAAgAkJgC0tim5upKSkurq6mpqaPDw8AG5ubtHR0aysrKysrMPDw757e4AAAIAAAIAK
        CoAxMYlvb6ampry8vMDAwMDAwJqamjw8PAB3d3fm5ubAwMDDw8Pgzs6OHByACgqANjaIcXGoqKi+vr7A
        wMDAwMDAwMDAwMCampo8PDwAd3d35ubmwMDAz8/Pt3p6gTs7iXd3qKiowMDAwMDAwMDAwMDAwMDAwMDA
        wMDAmpqaPDw8AHd3d+bm5sDAwK+vr4uLi6qqqsDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJqamjw8
        PAB3d3f09PTj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+O8vLw9PT0AcXN0e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7eXl5YmRmAA==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAEAAAAA
        AACwrLAAAAAAAFhYWAD///8AsIx4AMCMkADQnJAAwJx4APC8oABoaFgAkGhoAJB4aABoWFgAoHh4ANCM
        kADAjHgAeFhoAHhoaACweHgAwJyQAPDg0AD/4NAAWEhIAHhoWACgjHgAOCQ4AKB4aACweJAA/9DgAHhY
        WABoWGgAeHhYAFhIOACQaHgAODQoAKCMaACwjJAAWFhIAGhISABISDgASDRIAEg0OADgnJAA/+DgAFhI
        WAA4NDgAeHhoAGhIWABYWDgAoGh4AEgkKABISCgASCQ4ADgkKABYNEgAKCQoACgUKABYNDgA8NDgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEC
        AAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgIBAgABAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgwlDCUCAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQECDAIrAywCAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQIMCQwAAAMMAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAh4MAgEAAAIC
        AgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECEAkdCQIBAQIMAgEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQIQCRAJHgwCAgwCAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAhEJHQYGCR0JDAkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEC
        EBcQBhkCEAkeDAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQIKFxEGKSICCRAJAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAhEREQgoLQIJEAkBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQECCh8KCBYnAhcRCQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQIKEQoIFiACFxARAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgoLCggm
        IAIfChcBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECIQshFC8WAi4KEQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQINCxoUJjACCwofAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAjELDRQWFgILCgoBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQECDRoNAxYgAgsKCwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQINDQ0DKCcCCyEL
        GQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAhIjEgMpMwIaDQsyAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECEhgSAxkiAgsNCxkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQIBAQEBAQIEBBIDNSICIw0aNAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAgICAhsE
        EgM4NwIYDQ02AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQIBAgcFBA8EDwQEBAMCAhgSIzkBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgUFBwUPBQQFBCQEGwQSGBIYAgEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBBw4HBQcFBwUEDwQPBA8EBAQCAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEU
        DhMFEwUHBQQFBCQEJAQbBAIBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEVBgYHDgcVFBUHBQQP
        BA8EAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARwTDhMOExwBAQEcDwUEBQQFAgEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQMGBgYGFQEBAQEBAgcFBAUEAgEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQMGBhM6AQEBAQEBAgUFBQQFAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQMq
        BhUBAQEBAQECAgcFBwUEAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQMGHAEBAQEBAQEBAgUH
        BQ8CAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEVAQEBAQEBAQECDgcOBwUCAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQIOEwUTBQIBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAgYGBgcOBwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQECBgYOEw4UAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQIqBgYGFRQB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQMDAxQrAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB////////////////////////////////////////
        ////////+A/////////wD////////+AP////////wA////////+AD////////wAP///////+AA//////
        //wAH///////+AA////////wAH///////+AA////////wAH///////+AA////////wAH///////+AA//
        //////wAH///////+AA////////wAH///////+AA////////wAH///////+AA////////wAH///////A
        AA///////4AAH//////+AAA///////wAAH///////AAA///////4AAH///////gAA///////8BwD////
        ///wPgP///////B+A///////8PwD///////x/Af///////v4B/////////AP////////4B/////////A
        P////////8B/////////wf//////////////////////////////////////////////////
</value>
  </data>
</root>